% layout 'upravlenie';
% title 'Входъ';

%= stylesheet begin
[name="login_key"] {
    color: rgba(81,81,81,0.1);
    text-shadow: 0 0 15px rgba(0,0,0,1);
}
% end
<div class="mui-container">
    <h1><%= title %></h1>
    <div class="mui-panel">
% if(stash->{sign_in_error}) {
    <div id="sign_in_error" class="mui-panel field-with-error"><%= stash->{sign_in_error} %></div>
% }
%= form_for sign_in => (id => 'sign_in', class => 'mui-form') => begin
<div class="mui-textfield">
%= label_for login_name => 'Име за входъ'
<%=
text_field 'login_name',
  placeholder => '"Име за входъ" е задължително поле (от 5 до 100 знака).',
  title       => 'Име за входъ'
%>
</div>
<div class="mui-textfield">
%= label_for login_key => 'Таен ключ'
%= password_field login_key => placeholder => '"Таен ключъ" е задължително поле (от 8 до 40 знака).', title => 'Таен ключ'
%= hidden_field 'digest'
%= csrf_field
</div>
%= submit_button 'Входъ' => (class=> 'mui-btn mui-btn--primary')
% if(stash->{sign_in_error}) {
%= t 'button' => (id => 'forgotten_pass', class => 'mui-btn mui-btn--danger')  => 'Забравен ключ?'
% }
%= end
    </div>
</div>
%= javascript 'js/CryptoJS-v3.1.2/sha1.js'
%= javascript begin
"use strict";
const qS = document.querySelector.bind(document);

const name_field = qS('[name="login_name"]');
const passw_field = qS('[name="login_key"]');
const dijest_field = qS('[name="digest"]');
const csrf_field = qS('[name="csrf_token"]');
const login_form = qS("#sign_in");
login_form.onsubmit = function() {
  const concat_ln_lp = name_field.value + passw_field.value;
  passw_field.parentNode.removeChild(passw_field);
  const passw_sha1 = CryptoJS.SHA1(concat_ln_lp);
  dijest_field.value = CryptoJS.SHA1(csrf_field.value + passw_sha1);
  return true;
};
% end


<%
my @classes = map { $in->{$_} ? $_ : '' } (qw(hidden deleted));
my $class = join ' ', 'fields', @classes;
state $formats   = $c->openapi_spec('/parameters/data_format/enum');
state $languages = $c->openapi_spec('/parameters/language/enum');
state $permissions = $c->openapi_spec('/parameters/permissions/enum');
$in->{user_id} //= $c->user->{id};
$in->{group_id} //= $c->user->{group_id};
%>
%= link_to '‚Æâ üóê' => 'home_stranici' => (title => 'Up to list of stranici')
%= form_for $target => begin

%=t fieldset => (id=>'page_attributes', class=>$class) => begin
  %=t legend =>'Page Attributes'
  %= label_for pid => 'Pid'
  %= number_field pid => (readonly=>undef)
  %= label_for dom_id => 'Dom_id',
  %= number_field 'dom_id'
  %= label_for alias =>'Alias'
  %= text_field alias => size => 32
  <%=
  select_box
    page_type => [['Regular' => '–æ–±–∏—á–∞–π–Ω–∞'], ['Root page' => '–∫–æ—Ä–µ–Ω—ä',]],
    required => 1, label => 'Page type'
  %>
  %= label_for sorting => 'Sorting'
  %= number_field sorting => (size => 3)
  %= label_for template => 'Template'
  %= text_field template => (size => 255, style => 'width:50%')
  %= label_for group_id => 'Group_id'
  %= label_for start => 'Start'
  %= number_field 'start'
  %= label_for stop => 'Stop'
  %= number_field 'stop'
  %= label_for hidden => 'Hidden'
  %= check_box hidden => 1
  %= label_for deleted => 'Deleted'
  %= check_box deleted => 1
% end
% if (${target} eq 'update_stranici') {
%= t fieldset => (id=>'permissions') => begin
  %= t legend => '–†–∞–∑—Ä–µ—à–µ–Ω–∏—è –∏ –æ–±–Ω–∞—Ä–æ–¥–≤–∞–Ω–µ'
<%
# TODO: Make these listings an Ajax request and implement Autocomplete making
# requests each 500ms. like in jQ UI
# This will be needed when we have many (more than 100) users
state $users
  = users->all({where => {login_name => {'!=' => 'guest'}}})
  ->map(sub { [$_->{first_name} . ' ' . $_->{last_name} => $_->{id}] });
state $groups
  = groups->all({where => {name => {'!=' => 'guest'}}})
  ->map(sub { [$_->{name} => $_->{id}] });

if ($in->{user_id} != $c->user->{id}){
    my $u = $users->first(sub{ $_->[1] eq $in->{user_id}});
%>
  <span style ="display: inline-block"> –°–æ–±—Å—Ç–≤–µ–Ω–∏–∫:
      %== $u ? $u->[0] : '<i>–ù–µ–¥–µ–π—Å—Ç–≤–∞—â –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª</i>'
  %= hidden_field(user_id => $in->{user_id})
  <% } else { %>
  <%=
  select_box(
    user_id => [['–ò–∑–±–µ—Ä–µ—Ç–µ –Ω–æ–≤ —Å–æ–±—Å—Ç–≤–µ–Ω–∏–∫' => ''], @$users],
    label   => '–°–æ–±—Å—Ç–≤–µ–Ω–∏–∫')
  %>
  % }
  <%=
  select_box
    group_id => [['–ò–∑–±–µ—Ä–µ—Ç–µ —Å—ä—Ç—Ä—É–¥–Ω–∏—Ü–∏' => ''], @$groups],
    label    => '–°—ä—Ç—Ä—É–¥–Ω–∏—Ü–∏'
  %>
  <%=
# TODO: document and design the behavior for stranici which are "d" (directories) and "l" (links)
  select_box
    permissions => [map { [$_ => $_] } @$permissions],
    required    => 1,
    label       => '–ü—Ä–∞–≤–∞'
  %>
  <%=
  select_box
    published => [['–∑–∞ –ø—Ä–µ–≥–ª–µ–¥' => 1], ['–Ω–µ' => 0], ['–¥–∞' => 2]],
    label => '–û–±–Ω–∞—Ä–æ–¥–≤–∞–Ω–æ'
  %>
% end ;# fieldset
% }
%=t fieldset => (id=>'title') => begin
      %=t legend => 'Page Content'
      %= input_tag  'title_id' => (type =>'hidden')
      %= label_for title => 'Title'
      %= text_field title => (required => 1 , placeholder =>'Title for the page')
      %= select_box language => [map {[$_=>$_]} @$languages]
      <%=
      select_box
        data_format => [map { [$_ => $_] } @$formats],
        label       => 'Data format'
      %>
      <br />
      %= label_for body =>'Body'
      <div id="_body">
      %= text_area body  => ($in->{body} || '–ó–∞–¥–∞–π—Ç–µ –æ—Å–Ω–æ–≤–µ–Ω —Ç–µ–∫—Å—Ç –∑–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ç–∞.'),(style=>'width:100%;height:15em')
      % end
      </div>
  %=javascript '/js/editor.js'

  %= submit_button $caption
% end


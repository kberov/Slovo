<%
state $types     = $c->openapi_spec('/parameters/data_type/enum');
state $formats   = $c->openapi_spec('/parameters/data_format/enum');
state $languages = $c->openapi_spec('/parameters/language/enum');
state $permissions = $c->openapi_spec('/parameters/permissions/enum');
%>
%= link_to '‚Æâ‚ò∞' => 'home_celini' => (title => 'Up to list of celini')
<%= link_to 'üñπ‚Æâ‚ò∞' => url_for('home_celini')->query([page_id => $in->{page_id}])
    => (title => 'Up to list of celini in the same page')
%>
<hr />
%= form_for $target => begin

%= t fieldset => (id=>'main_properties') => begin
  %= t legend => '–ì–ª–∞–≤–Ω–∏ —Å–≤–æ–π—Å—Ç–≤–∞'
  %= label_for title =>'Title'
  %= text_field title => (placeholder =>'Title for the content element', required => 1, size => 55)
  %= label_for alias =>'Alias'
  %= text_field alias => (size => 55)
<br />
  %= label_for 'body' => 'Body'
  <div id="_body">
  %= text_area 'body' => (required => 1, style=>'width:100%;height:25em')
  </div>
<br />
  <%=
  select_box
    data_type => [map {[$_=>$_]} @$types],
    label => 'Data type'
  %>
  <%=
  select_box
    data_format => [map {[$_=>$_]} @$formats],
    label => 'Data format'
  %>
  %=javascript '/js/editor.js'
  <%=
  select_box
    language => [map {[$_=>$_]} @$languages],
    label => 'Language'
  %>
% end ;# fieldset

% if (${target} eq 'update_celini') {
%= t fieldset => (id=>'permissions') => begin
  %= t legend => '–†–∞–∑—Ä–µ—à–µ–Ω–∏—è –∏ –æ–±–Ω–∞—Ä–æ–¥–≤–∞–Ω–µ'
<%
# TODO: Make these listings an Ajax request and implement Autocomplete making
# requests each 500ms. like in jQ UI
# This will be needed when we have many (more than 100) users
state $users
  = users->all({where => {login_name => {'!=' => 'guest'}, disabled => 0}})
  ->map(sub { [$_->{first_name} . ' ' . $_->{last_name} => $_->{id}] });
  state $groups
  = groups->all({where => {name => {'!=' => 'guest'}, disabled => 0}})
  ->map(sub { [$_->{name} => $_->{id}] });
%>
  <% if($in->{user_id} != $c->user->{id}){ %>
  <span style ="display: inline-block"> –°–æ–±—Å—Ç–≤–µ–Ω–∏–∫:
  %= $users->first(sub{$_->[1] eq $in->{user_id}})->[0]
  %= hidden_field(user_id => $in->{user_id})
  <% } else { %>
  <%=
  select_box(
    user_id => [['–ò–∑–±–µ—Ä–µ—Ç–µ –Ω–æ–≤ —Å–æ–±—Å—Ç–≤–µ–Ω–∏–∫' => ''], @$users],
    label   => '–°–æ–±—Å—Ç–≤–µ–Ω–∏–∫')
  %>
  % }
  <%=
  select_box
    group_id => [['–ò–∑–±–µ—Ä–µ—Ç–µ —Å—ä—Ç—Ä—É–¥–Ω–∏—Ü–∏' => ''], @$groups],
    label    => '–°—ä—Ç—Ä—É–¥–Ω–∏—Ü–∏'
  %>
  <%=
# TODO: document and design the behavior for celini which are "d" (directories) and "l" (links)
  select_box
    permissions => [map { [$_ => $_] } @$permissions],
    required    => 1,
    label       => '–ü—Ä–∞–≤–∞'
  %>
  <%=
  select_box
    published => [['–∑–∞ –ø—Ä–µ–≥–ª–µ–¥' => 1], ['–Ω–µ' => 0], ['–¥–∞' => 2]],
    label => '–û–±–Ω–∞—Ä–æ–¥–≤–∞–Ω–æ'
  %>
% end ;# fieldset
% }
%= t fieldset => (id=>'additional_properties') => begin
  %= t legend => '–î–æ–ø—ä–ª–Ω–∏—Ç–µ–ª–Ω–∏ —Å–≤–æ–π—Å—Ç–≤–∞'

  %= label_for pid => 'Pid'
  %= number_field 'pid'

  %= label_for from_id => 'From_id'
  %= number_field 'from_id'

  %= label_for page_id => 'Page_id'
  %= number_field page_id => readonly => 1

  %= label_for sorting => 'Sorting'
  %= number_field sorting =>  size => 3

  %= label_for description =>'Description'
  %= text_field description =>  size => 55

  %= label_for keywords =>'Keywords'
  %= text_field keywords => size => 55

  %= label_for tags =>'Tags'
  %= text_field tags => size => 100

  <%=
  select_box
    box => [
            ['main'   => '–≥–ª–∞–≤–Ω–∞'],
            ['top'    => '–≥–æ—Ä—£'],
            ['left'   => '–ª—£–≤–æ'],
            ['right'  => '–¥—£—Å–Ω–æ'],
            ['bottom' => '–¥–æ–ª—É']
           ],
    label => 'Box'
  %>
  %= label_for featured => 'Featured'
  %= check_box 'featured' => 1

  %= label_for accepted => 'Accepted'
  %= check_box accepted => 1, (title =>'If this is a "–≤—ä–ø—Ä–æ—Å", is it accepted?')

  %= label_for bad => 'Bad'
  %= number_field bad => size => 2

  %= label_for deleted => 'Deleted'
  %= check_box deleted => 1

  %= label_for start => 'Start'
  %= number_field 'start'

  %= label_for stop => 'Stop'
  %= number_field 'stop'
% end ;# fieldset

  %= submit_button $caption
% end
